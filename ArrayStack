import java.util.NoSuchElementException;

public class ArrayStack<T> implements Stack<T> {
    private final int CAPACITY = 10;
    private T[] stack = (T[])new Object[CAPACITY];
    private int count = 0;

    @Override
    public void push(T item) throws CannotAddException{

        if (count >= CAPACITY) {
            throw new CannotAddException();
        } else {
            stack[count] = item;
            count++;
        }
    }


    @Override
    public T pop() {
        if (count >= CAPACITY) {
            throw new NoSuchElementException();
        }
        else {

            T result = stack[count - 1];
            stack[--count] = null;
            return result;
        }
    }

    @Override
    public T peek() {
        if (count >= CAPACITY) {
            throw new NoSuchElementException();
        }
        else {
            return stack[count-1];
        }
    }

    @Override
    public boolean isEmpty() {
        return count == 0;
    }

    @Override
    public int length() {
        return count;
    }


    @Override
    public String toString() {
        StringBuilder output = new StringBuilder();
        for (int i = 0; i < count; i++) {
            output.append(stack[i] + " ");
        }
        return output.toString();
    }
}
